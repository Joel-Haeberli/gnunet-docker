
############################################################
# Dockerfile to build ">Y< GNUnet" compile image.
#
# This file is part of gnunet-docker.
# Copyright (C) 2019-2021 Bernd Fix  >Y<
#
# gnunet-docker is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# gnunet-docker is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# SPDX-License-Identifier: AGPL3.0-or-later
############################################################

FROM debian:buster

LABEL maintainer="Bernd Fix <brf@hoi-polloi.org>"

ENV GNURL_VERSION gnurl-7.72.0
ENV MHTTP_VERSION v0.9.72
ENV GNUNET_VERSION v0.14.0
ENV GNUNET_GTK_VERSION v0.14.0

ENV GNUNET_PREFIX  /opt/gnunet


#-----------------------------------------------------------
# Install dependencies.
#-----------------------------------------------------------

ENV DEBIAN_FRONTEND noninteractive

RUN \
	apt-get update && \
	apt-get -y upgrade && \
	apt-get -y install --no-install-recommends \
		autoconf \
		automake \
		autopoint \
		bluetooth \
		build-essential \
		ca-certificates \
		git \
		gnutls-bin \
		iptables \
		libextractor-dev \
		libidn11-dev \
		libgcrypt-dev \
		libgnutls28-dev \
		libgladeui-dev \
		libglpk-dev \
		libgtk-3-dev \
		libidn2-dev \
		libjansson-dev \
		libltdl-dev \	
		libopus-dev \
		libogg-dev \
		libpq-dev \
		libpulse-dev \
		libqrencode-dev \
		libsodium-dev \
		libsqlite3-dev \
		libtool \
		libunique-dev \
		libunistring-dev \
		libzbar-dev \
		miniupnpc \
		net-tools \
		openssl \
		python-zbar \
		texinfo \
		texi2html \
		zlib1g-dev \
		&& \
	apt-get clean all && \
	apt-get -y autoremove --purge && \
	rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


#-----------------------------------------------------------
# Install latest gnurl
#-----------------------------------------------------------

RUN \
	mkdir -p /opt/src && \
	cd /opt/src && \
	git clone https://git.taler.net/gnurl.git gnurl && \
	cd /opt/src/gnurl && \
	[ ${GNURL_VERSION} = "latest" ] || git checkout ${GNURL_VERSION} && \
	./buildconf && \
	./configure \
		--enable-ipv6 --with-gnutls --without-libssh2 --without-libpsl \
		--without-libmetalink --without-winidn --without-librtmp \
		--without-nghttp2 --without-nss --without-cyassl \
		--without-polarssl --without-ssl --without-winssl \
		--without-darwinssl --disable-sspi --disable-ntlm-wb --disable-ldap \
		--disable-rtsp --disable-dict --disable-telnet --disable-tftp \
		--disable-pop3 --disable-imap --disable-smtp --disable-gopher \
		--disable-file --disable-ftp --disable-smb --disable-ares \
		--prefix=${GNUNET_PREFIX} && \
	make && \
	make install

#-----------------------------------------------------------
# Install latest libmicrohttpd
#-----------------------------------------------------------

RUN \
	mkdir -p /opt/src && \
	cd /opt/src && \
	git clone https://git.gnunet.org/libmicrohttpd.git libmicrohttpd && \
	cd /opt/src/libmicrohttpd && \
	[ ${MHTTP_VERSION} = "latest" ] || git checkout ${MHTTP_VERSION} && \
	./bootstrap && \
	./configure --prefix=${GNUNET_PREFIX} && \
	make && \
	make install

#===========================================================
# GNUnet CORE
#===========================================================

#-----------------------------------------------------------
# Get GNUnet source code
#-----------------------------------------------------------

RUN \
	mkdir -p /opt/src && \
	cd /opt/src && \
	git clone https://git.gnunet.org/gnunet.git gnunet && \
	cd gnunet && \
	[ ${GNUNET_VERSION} = "latest" ] || git checkout ${GNUNET_VERSION}

#-----------------------------------------------------------
# Build GNUnet core
#-----------------------------------------------------------

RUN \
	adduser --system --home /var/lib/gnunet --uid 666 --group --disabled-password gnunet && \
	addgroup --system --gid 667  gnunetdns && \
	cd /opt/src/gnunet && \
	mkdir -p ${GNUNET_PREFIX} && \
	./bootstrap && \
	./configure \
		--prefix=${GNUNET_PREFIX} \
		--enable-logging=verbose \
		--with-sudo=sudo \
		--with-microhttpd=${GNUNET_PREFIX} \
		--with-libgnurl=${GNUNET_PREFIX} \
		&& \
	make && \
	make install

#===========================================================
# GNUnet GTK
#===========================================================

#-----------------------------------------------------------
# Get GNUnet GTKsource code (latest revision)
#-----------------------------------------------------------

RUN \
	cd /opt/src && \
	git clone https://git.gnunet.org/gnunet-gtk.git gnunet-gtk && \
	cd gnunet-gtk && \
	[ ${GNUNET_GTK_VERSION} = "latest" ] || git checkout ${GNUNET_GTK_VERSION}

#-----------------------------------------------------------
# Build GNUnet GTK
#-----------------------------------------------------------

RUN \
	cd /opt/src/gnunet-gtk && \
	./bootstrap && \
	./configure \
		--prefix=${GNUNET_PREFIX} \
		--with-gnunet=${GNUNET_PREFIX} \
		&& \
	make && \
	make install

#===========================================================
# Package binaries.
#===========================================================

RUN \
	tar cvzf /opt/gnunet-bin.tar.gz -C ${GNUNET_PREFIX} .

